"use strict";var fs=require("fs"),path=require("path"),baseFolder=process.env.APPDATA!==undefined&&process.env.APPDATA!==""?process.env.APPDATA+"/ASP.NET/https":process.env.HOME+"/.aspnet/https",certificateArg=process.argv.map(function(n){return n.match(/--name=(?<value>.+)/i)}).filter(Boolean)[0],certificateName=certificateArg?certificateArg.groups.value:process.env.npm_package_name,certFilePath,keyFilePath,_iterator,_step,line;if(certificateName||(console.error("Invalid certificate name. Run this script in the context of an npm/yarn script or pass --name=<<app>> explicitly."),process.exit(-1)),certFilePath=path.join(baseFolder,certificateName+".pem"),keyFilePath=path.join(baseFolder,certificateName+".key"),fs.existsSync(".env.development.local")){var lines=fs.readFileSync(".env.development.local").toString().split("\n"),hasCert=undefined,hasCertKey=!1,_iteratorNormalCompletion=!0,_didIteratorError=!1,_iteratorError=undefined;try{for(_iterator=lines[Symbol.iterator]();!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=!0)line=_step.value,/SSL_CRT_FILE=.*/i.test(line)&&(hasCert=!0),/SSL_KEY_FILE=.*/i.test(line)&&(hasCertKey=!0)}catch(err){_didIteratorError=!0;_iteratorError=err}finally{try{!_iteratorNormalCompletion&&_iterator["return"]&&_iterator["return"]()}finally{if(_didIteratorError)throw _iteratorError;}}hasCert||fs.appendFileSync(".env.development.local","\nSSL_CRT_FILE="+certFilePath);hasCertKey||fs.appendFileSync(".env.development.local","\nSSL_KEY_FILE="+keyFilePath)}else fs.writeFileSync(".env.development.local","SSL_CRT_FILE="+certFilePath+"\nSSL_KEY_FILE="+keyFilePath);